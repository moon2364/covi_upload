version: "3.8" #Dockerfile 형식 버전
services:
  frontend:
    restart: always
    command : npm run dev -- --host --port 5173
    container_name: front
    build:
      context: ./frontend/
      dockerfile: Dockerfile
    # image: front
    ports:
      - "6001:5173"
    # stdin_open: true
    environment:
      - CHOKIDAR_USEPOLLING=true # 실시간 반영
      
    volumes:
      - ./frontend:/app  # 로컬 파일을 컨테이너에 마운트하여 실시간 반영
      - /app/node_modules  # 컨테이너 내부의 node_modules 디렉토리를 별도로 유지

  backend:
    # build:
    #   context: ./backend/
    #   dockerfile: Dockerfile
    image: back
    container_name: back
    command: >
      sh -c "
      sleep 2 &&
      python manage.py migrate &&
      python create_superuser.py &&
      python manage.py runserver 0.0.0.0:8000"
    # volumes:
    #   - ./backend:/app
    ports:
      - "6010:8000"
    depends_on:
      - db
    environment:
      DJANGO_SUPERUSER_USERNAME: admin
      DJANGO_SUPERUSER_EMAIL: admin@example.com
      DJANGO_SUPERUSER_PASSWORD: 2923
      POSTGRES_DB: database
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      DJANGO_SETTINGS_MODULE: backend.settings
      
    
  db:
    image: postgres:latest
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: database
    ports:
      - "6020:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

volumes:
  db_data: